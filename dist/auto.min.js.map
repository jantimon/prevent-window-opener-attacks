{"version":3,"file":"auto.min.js","sources":["../src/lib.js","../src/index.js"],"sourcesContent":["\"use strict\";\nfunction preventWindowOpenerAttacks(clickEvent) {\n  document.documentElement.removeEventListener(\n    \"click\",\n    preventWindowOpenerAttacks\n  );\n  // Stop if any other javascript prevented the event\n  if (clickEvent.defaultPrevented) {\n    return;\n  }\n  // Stop if the clicked element is not an \"A\" element\n  if (!clickEvent.target || clickEvent.target.nodeName !== \"A\") {\n    return;\n  }\n  // Stop if the clicked a element is not set to target = _blank\n  if (clickEvent.target.target !== \"_blank\") {\n    return;\n  }\n\n  clickEvent.preventDefault();\n  var win = window.open(clickEvent.target.href, \"_blank\");\n  if (win) {\n    win.opener = null;\n  }\n}\n\nexport function startProtection(whiteList) {\n  // Add event listener to documentElement just before it bubbles up\n  document.body.addEventListener(\"click\", function(e) {\n    // Ensure that previous events are cleaned up even if the event did not bubble\n    document.documentElement.removeEventListener(\n      \"click\",\n      preventWindowOpenerAttacks\n    );\n    // Wait for the current event to bubble to the documentElement\n    document.documentElement.addEventListener(\n      \"click\",\n      preventWindowOpenerAttacks\n    );\n  });\n}\n\nexport function patchWindowOpen() {\n  var originalWindowOpen = window.open;\n  window.open = function(url, target) {\n    var result = originalWindowOpen.apply(this, arguments);\n    if (result && target === \"_blank\") {\n      result.opener = null;\n    }\n    return result;\n  };\n}\n","import { startProtection, patchWindowOpen } from \"./lib\";\n\n// Execute callback as soon as dom is ready\nfunction onReady(callback) {\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", callback);\n  } else {\n    callback();\n  }\n}\n\n// Apply patches to work around javascript window.open vulnarabilities\npatchWindowOpen();\n\n// Wait until document body exists\n// and start click protection\nonReady(startProtection);\n"],"names":["preventWindowOpenerAttacks","clickEvent","document","documentElement","removeEventListener","defaultPrevented","target","nodeName","preventDefault","win","window","open","href","opener","originalWindowOpen","url","result","apply","this","arguments","patchWindowOpen","callback","whiteList","body","addEventListener","e","readyState"],"mappings":"yBACA,SAASA,EAA2BC,GAMlC,GALAC,SAASC,gBAAgBC,oBACvB,QACAJ,IAGEC,EAAWI,kBAIVJ,EAAWK,QAAyC,MAA/BL,EAAWK,OAAOC,UAIX,WAA7BN,EAAWK,OAAOA,OAAtB,CAIAL,EAAWO,iBACX,IAAIC,EAAMC,OAAOC,KAAKV,EAAWK,OAAOM,KAAM,UAC1CH,IACFA,EAAII,OAAS,QAoBjB,WACE,IAAIC,EAAqBJ,OAAOC,KAChCD,OAAOC,KAAO,SAASI,EAAKT,GAC1B,IAAIU,EAASF,EAAmBG,MAAMC,KAAMC,WAI5C,OAHIH,GAAqB,WAAXV,IACZU,EAAOH,OAAS,MAEXG,GCrCXI,GATiBC,EDuBjB,SAAgCC,GAE9BpB,SAASqB,KAAKC,iBAAiB,QAAS,SAASC,GAE/CvB,SAASC,gBAAgBC,oBACvB,QACAJ,GAGFE,SAASC,gBAAgBqB,iBACvB,QACAxB,MCjCwB,YAAxBE,SAASwB,WACXxB,SAASsB,iBAAiB,mBAAoBH,GAE9CA,IAJJ,IAAiBA"}